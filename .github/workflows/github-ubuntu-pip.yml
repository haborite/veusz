name: Ubuntu build using pip packages

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Upgrade pip
      run : |
        python -V
        python -m pip install --upgrade pip
      
    - name: Install aqtinstall
      run: |
        python -m pip install --upgrade pip
        pip install aqtinstall

    - name: Install Qt 6.7.3
      run: |
        aqt install-qt linux desktop 6.7.3 linux_gcc_64
        echo "QT_ROOT_DIR=$(pwd)/6.7.3/gcc_64" >> $GITHUB_ENV
        echo "QMAKE_EXE=${{ env.QT_ROOT_DIR }}/bin/qmake" >> $GITHUB_ENV
        echo "QT_INCLUDE_DIR=$(${{ env.QMAKE_EXE }} -query QT_INSTALL_HEADERS)" >> $GITHUB_ENV
        echo "QT_LIBRARY_DIR=$(${{ env.QMAKE_EXE }} -query QT_INSTALL_LIBS)" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${{ env.QT_LIBRARY_DIR }}:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        
    - name: Install Python dependencies
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip list
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential libegl1 libxcb1-dev libx11-dev libxext-dev libxrender-dev

    - name: Build extensions
      env:
        QMAKE_EXE: ${{ env.QMAKE_EXE }}
        QT_INCLUDE_DIR: ${{ env.QT_INCLUDE_DIR }}
        QT_LIBRARY_DIR: ${{ env.QT_LIBRARY_DIR }}
      run: |
        python setup.py build_ext --inplace
  
    - name: Run tests
      env:
        LD_LIBRARY_PATH: ${{ env.QT_ROOT_DIR }}/lib:${{ env.LD_LIBRARY_PATH }}
        QT_QPA_PLATFORM: minimal
        VEUSZ_INPLACE_TEST: 1
      run: |
        tests/runselftest.py
